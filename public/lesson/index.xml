<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lessons on Fundamentals</title>
    <link>http://macwebdev.ca/lesson/index.xml</link>
    <description>Recent content in Lessons on Fundamentals</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 Jan 2017 21:30:33 -0500</lastBuildDate>
    <atom:link href="http://macwebdev.ca/lesson/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Conditionals</title>
      <link>http://macwebdev.ca/lesson/conditionals/</link>
      <pubDate>Fri, 06 Jan 2017 21:30:33 -0500</pubDate>
      
      <guid>http://macwebdev.ca/lesson/conditionals/</guid>
      <description>&lt;div id = &#34;Description&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
            &lt;p&gt;
                &lt;i&gt;Lesson created by Richard Yi&lt;/i&gt;
            &lt;/p&gt;
            &lt;p&gt;
                Conditional statements, or &#34;if statements&#34;, let you run some code only if a certain condition is true.
                    &lt;br/&gt;
                The condition can check if 2 values are equal, if a value is less than another, if a value is more than another, or a mixture of these
            &lt;/p&gt;
            &lt;p&gt;If the condition turns out to be true, it will excecute the code in the block below&lt;/p&gt;
            &lt;p&gt;For example, you can ask for the user&#39;s age and see if they&#39;re an adult.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Code&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
            &lt;ul class=&#34;nav nav-tabs tabs-3&#34; role=&#34;tablist&#34;&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link active&#34; data-toggle=&#34;tab&#34; href=&#34;#turing&#34; role=&#34;tab&#34;&gt;Turing&lt;/a&gt;&lt;/li&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link&#34; data-toggle=&#34;tab&#34; href=&#34;#python&#34; role=&#34;tab&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link&#34; data-toggle=&#34;tab&#34; href=&#34;#java&#34; role=&#34;tab&#34;&gt;Java&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;div class=&#34;tab-content&#34;&gt;
                &lt;div id=&#34;turing&#34; class=&#34;tab-pane fade in active&#34;&gt;
                &lt;pre class=&#34;language-turing line-numbers&#34;&gt;
                    &lt;code&gt;
                        var age : int
                        
                        put &#34;Enter your age.&#34;
                        get age
                        
                        if age &lt; 18 then
                            put &#34;You are not an adult.&#34;
                            %If age is less than 18, every line until &#34;end if&#34; will be excecuted
                        end if
                    &lt;/code&gt;
                &lt;/pre&gt;
                &lt;/div&gt;
                &lt;div id=&#34;python&#34; class=&#34;tab-pane fade&#34;&gt;
                    &lt;pre class=&#34;language-python line-numbers&#34;&gt;
                        &lt;code&gt;
                            age = int(raw_input(&#39;Enter your age.&#39;))
                            
                            if age &lt; 18:
                                print(&#39;You are not an adult.&#39;)
                                #If age is less than 18, every line on this indent level will be excecuted
                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
                &lt;div id=&#34;java&#34; class=&#34;tab-pane fade&#34;&gt;
                    &lt;pre class=&#34;language-java line-numbers&#34;&gt;
                        &lt;code&gt;
                            BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
                            
                            System.out.print(&#34;Please enter your age: &#34;);
                            int age = Integer.parseInt(in.readLine());
                            
                            if (age &lt; 18)
                            {
                                System.out.println(&#34;You are not an adult.&#34;);
                                //If age is less than 18, every line until the } will be excecuted
                            }
                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Description&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34; style = &#34;margin: 20px 0px 20px 0px&#34;&gt;
            If you want some code to run if some condition is true, and want some other code to run if that condition isn&#39;t true, you can use an &lt;b&gt;else&lt;/b&gt; with the if statement
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Code&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
            &lt;ul class=&#34;nav nav-tabs tabs-3&#34; role=&#34;tablist&#34;&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link active&#34; data-toggle=&#34;tab&#34; href=&#34;#turing2&#34; role=&#34;tab&#34;&gt;Turing&lt;/a&gt;&lt;/li&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link&#34; data-toggle=&#34;tab&#34; href=&#34;#python2&#34; role=&#34;tab&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link&#34; data-toggle=&#34;tab&#34; href=&#34;#java2&#34; role=&#34;tab&#34;&gt;Java&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;div class=&#34;tab-content&#34;&gt;
                &lt;div id=&#34;turing2&#34; class=&#34;tab-pane fade in active&#34;&gt;
                    &lt;pre class=&#34;language-turing line-numbers&#34;&gt;
                        &lt;code&gt;
                            var age : int
                            
                            put &#34;Enter your age.&#34;
                            get age
                            
                            if age &lt; 18 then
                                put &#34;You are not an adult.&#34;
                                %If age is less than 18, every line until &#34;else&#34; will be excecuted
                            else
                                put &#34;You are an adult.&#34;
                                %If age is not less than 18, every line until &#34;end if&#34; will be excecuted
                            end if
                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
                &lt;div id=&#34;python2&#34; class=&#34;tab-pane fade&#34;&gt;
                    &lt;pre class=&#34;language-python line-numbers&#34;&gt;
                        &lt;code&gt;
                            age = int(raw_input(&#39;Enter your age.&#39;))
                            
                            if age &lt; 18:
                                print(&#39;You are not an adult.&#39;)
                                #If age is less than 18, every line on this indent level will be excecuted
                            else:
                                print(&#39;You are an adult.&#39;)
                                #If age is not less than 18, every line on this indent level will be excecuted
                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
                &lt;div id=&#34;java2&#34; class=&#34;tab-pane fade&#34;&gt;
                    &lt;pre class=&#34;language-java line-numbers&#34;&gt;
                        &lt;code&gt;
                            BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
                            
                            System.out.print(&#34;Please enter your age: &#34;);
                            int age = Integer.parseInt(in.readLine());
                            
                            if (age &lt; 18)
                            {
                                System.out.println(&#34;You are not an adult.&#34;);
                                //If age is less than 18, every line until the } will be excecuted
                            }
                            else
                            {
                                System.out.println(&#34;You are an adult.&#34;);
                                //If age is not less than 18, every line until the } will be excecuted
                            }
                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Description&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34; style = &#34;margin: 20px 0px 20px 0px&#34;&gt;
            &lt;p&gt;You can use &lt;b&gt;elsif&lt;/b&gt; (a.k.a. &lt;b&gt;elif&lt;/b&gt; or &lt;b&gt;else if&lt;/b&gt;) to chain &lt;b&gt;if&lt;/b&gt; statements together.&lt;/p&gt;
            &lt;p&gt;
                If the condition in the &lt;b&gt;if&lt;/b&gt; statement is not true, then it checks for the condition in the next &lt;b&gt;elsif&lt;/b&gt; statement, then the next, and so on.
                    &lt;br/&gt;
                If none of the &lt;b&gt;if&lt;/b&gt; or &lt;b&gt;elsif&lt;/b&gt; statements are true, it goes to the &lt;b&gt;else&lt;/b&gt; block (if there is one).
            &lt;/p&gt;
        &lt;/div&gt;
    &lt;/div
&lt;/div&gt;

&lt;div id = &#34;Code&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
            &lt;ul class=&#34;nav nav-tabs tabs-3&#34; role=&#34;tablist&#34;&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link active&#34; data-toggle=&#34;tab&#34; href=&#34;#turing3&#34; role=&#34;tab&#34;&gt;Turing&lt;/a&gt;&lt;/li&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link&#34; data-toggle=&#34;tab&#34; href=&#34;#python3&#34; role=&#34;tab&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link&#34; data-toggle=&#34;tab&#34; href=&#34;#java3&#34; role=&#34;tab&#34;&gt;Java&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;div class=&#34;tab-content&#34;&gt;
                &lt;div id=&#34;turing3&#34; class=&#34;tab-pane fade in active&#34;&gt;
                    &lt;pre class=&#34;language-turing line-numbers&#34;&gt;
                        &lt;code&gt;
                            var age : int
                            
                            put &#34;Enter your age.&#34;
                            get age
                            
                            if age &lt; 14 then
                                put &#34;You haven&#39;t started high school yet.&#34;
                            elseif age &lt; 18 then
                                put &#34;You&#39;re not an adult.&#34;
                            elseif age &gt; 200 then
                                put &#34;Uh...&#34;
                            else
                                put &#34;You&#39;re an adult.&#34;
                            end if
                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
                &lt;div id=&#34;python3&#34; class=&#34;tab-pane fade&#34;&gt;
                    &lt;pre class=&#34;language-python line-numbers&#34;&gt;
                        &lt;code&gt;
                            age = int(raw_input(&#39;Enter your age.&#39;))
                            
                            if age &lt; 14:
                                put &#34;You haven&#39;t started high school yet.&#34;
                            elif age &lt; 18:
                                put &#34;You&#39;re not an adult.&#34;
                            elif age &gt; 200:
                                put &#34;Uh...&#34;
                            else
                                put &#34;You&#39;re an adult.&#34;
                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
                &lt;div id=&#34;java3&#34; class=&#34;tab-pane fade&#34;&gt;
                    &lt;pre class=&#34;language-java line-numbers&#34;&gt;
                        &lt;code&gt;
                            BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
                            
                            System.out.print(&#34;Please enter your age: &#34;);
                            int age = Integer.parseInt(in.readLine());

                            if(age &lt; 14)
                            {
                                System.out.println(&#34;You haven&#39;t started high school yet.&#34;);
                            }
                            else if(age &lt; 18)
                            {
                                System.out.println(&#34;You&#39;re not an adult.&#34;);
                            }
                            else if(age &gt; 200)
                            {
                                System.out.println(&#34;Uh...&#34;);
                            }
                            else
                            {
                                System.out.println(&#34;You&#39;re an adult.&#34;);
                            }
                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Sample&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
            &lt;h2&gt; Sample Problem &lt;/h2&gt;
            &lt;p&gt;
                Pick three random numbers from 1 to 10 and ask the user to enter a number between 1 and 10
                    &lt;br/&gt;
                If the user guesses one of the three numbers you picked, tell they won, otherwise, tell them they lost.
            &lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Loops</title>
      <link>http://macwebdev.ca/lesson/loops/</link>
      <pubDate>Wed, 30 Nov 2016 21:30:33 -0500</pubDate>
      
      <guid>http://macwebdev.ca/lesson/loops/</guid>
      <description>&lt;div id = &#34;Description&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
                &lt;i&gt;Lesson created by Abdul Arif&lt;/i&gt;
            &lt;p&gt;There are two types of loops: counted loops and conditional loops.&lt;/p&gt;
            &lt;h2&gt;Counted Loops&lt;/h2&gt;
            &lt;p&gt;Counted loops execute a predetermined number of times. The following provides an overview of counted loops:&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Code&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
            &lt;ul class=&#34;nav nav-tabs tabs-3&#34; role=&#34;tablist&#34;&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link active&#34; data-toggle=&#34;tab&#34; href=&#34;#turing&#34; role=&#34;tab&#34;&gt;Turing&lt;/a&gt;&lt;/li&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link&#34; data-toggle=&#34;tab&#34; href=&#34;#python&#34; role=&#34;tab&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link&#34; data-toggle=&#34;tab&#34; href=&#34;#java&#34; role=&#34;tab&#34;&gt;Java&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;div class=&#34;tab-content&#34;&gt;
                &lt;div id=&#34;turing&#34; class=&#34;tab-pane fade in active&#34;&gt;
                    &lt;pre class=&#34;language-turing line-numbers&#34;&gt;
                        &lt;code&gt;for i : startValue .. endValue
                          % code
                          % code
                        end for
                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
                &lt;div id=&#34;python&#34; class=&#34;tab-pane fade&#34;&gt;
                    &lt;pre class=&#34;language-python line-numbers&#34;&gt;
                        &lt;code&gt;for iteratingVariable in sequence:
                          #code
                          #code
                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
                &lt;div id=&#34;java&#34; class=&#34;tab-pane fade&#34;&gt;
                    &lt;pre class=&#34;language-java line-numbers&#34;&gt;
                        &lt;code&gt;for (initial condition; condition; increment){
                            //code
                            //code
                        }
                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Description&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34; style = &#34;margin: 20px 0px 20px 0px&#34;&gt;
      The following example will make the use of these loops clearer.  Let’s say we wanted to print “Hello World!” 5 times.  We could accomplish this as follows:
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Code&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
            &lt;ul class=&#34;nav nav-tabs tabs-3&#34; role=&#34;tablist&#34;&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link active&#34; data-toggle=&#34;tab&#34; href=&#34;#turing2&#34; role=&#34;tab&#34;&gt;Turing&lt;/a&gt;&lt;/li&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link&#34; data-toggle=&#34;tab&#34; href=&#34;#python2&#34; role=&#34;tab&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link&#34; data-toggle=&#34;tab&#34; href=&#34;#java2&#34; role=&#34;tab&#34;&gt;Java&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;div class=&#34;tab-content&#34;&gt;
                &lt;div id=&#34;turing2&#34; class=&#34;tab-pane fade in active&#34;&gt;
                    &lt;pre class=&#34;language-turing line-numbers&#34;&gt;
                        &lt;code&gt;for i : 1 .. 5
                           put (“Hello World!”)
                        end for

                          &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
                &lt;div id=&#34;python2&#34; class=&#34;tab-pane fade&#34;&gt;
                    &lt;pre class=&#34;language-python line-numbers&#34;&gt;
                        &lt;code&gt;for i in range (1, 5):
                          print “Hello World!”

                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
                &lt;div id=&#34;java2&#34; class=&#34;tab-pane fade&#34;&gt;
                    &lt;pre class=&#34;language-java line-numbers&#34;&gt;
                        &lt;code&gt;for (int i = 0; i &lt; 5; i++){
                           System.out.println(“Hello World!”);
                        } 

                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Description&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34; style = &#34;margin: 20px 0px 20px 0px&#34;&gt;
      But, what if we wanted to increment by a number other than one?  For example, to output all the multiples of 3 from 1 to 14, we could iterate from 1 to 14 and use conditionals to check for multiplicity.  However, we can achieve the same result using loops as follows.  (We know that the first number will be 3)
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Code&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
            &lt;ul class=&#34;nav nav-tabs tabs-3&#34; role=&#34;tablist&#34;&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link active&#34; data-toggle=&#34;tab&#34; href=&#34;#turing2&#34; role=&#34;tab&#34;&gt;Turing&lt;/a&gt;&lt;/li&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link&#34; data-toggle=&#34;tab&#34; href=&#34;#python2&#34; role=&#34;tab&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link&#34; data-toggle=&#34;tab&#34; href=&#34;#java2&#34; role=&#34;tab&#34;&gt;Java&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;div class=&#34;tab-content&#34;&gt;
                &lt;div id=&#34;turing2&#34; class=&#34;tab-pane fade in active&#34;&gt;
                    &lt;pre class=&#34;language-turing line-numbers&#34;&gt;
                        &lt;code&gt;for i : 3..14 by 3
                           put i
                        end for
                          &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
                &lt;div id=&#34;python2&#34; class=&#34;tab-pane fade&#34;&gt;
                    &lt;pre class=&#34;language-python line-numbers&#34;&gt;
                        &lt;code&gt;for i in range (1, 5):
                           print i  
                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
                &lt;div id=&#34;java2&#34; class=&#34;tab-pane fade&#34;&gt;
                    &lt;pre class=&#34;language-java line-numbers&#34;&gt;
                        &lt;code&gt;for (int i = 3; i &lt;=14; i+=3){
                           System.out.println (i);
                        }
                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Description&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
         &lt;h3&gt;Challenge Problem&lt;/h3&gt;
            &lt;p&gt;Use counted loops to output a 5 by 5 times table as follows:&lt;/p&gt;
            &lt;p&gt;1   2    3    4    5&lt;/p&gt;
            &lt;p&gt;2   4    6    8    10&lt;/p&gt;
            &lt;p&gt;3   6    9    12   15&lt;/p&gt;
            &lt;p&gt;4   8    12   16   20&lt;/p&gt;
            &lt;p&gt;5   10   15   20   25&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Sample&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
            &lt;h2&gt; Conditional Loops &lt;/h2&gt;
            &lt;p&gt; Conditional Loops execute until a specific condition is met.  For example, a program may ask the user to keep entering a password until it is correct.  An additional control variable is also required with these types of loops.
&lt;/p&gt;
        &lt;p&gt;\nIf we needed to find the number of times we need to divide the number 10 by 2 to get a value less than 1, we could do this as follows:
&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Code&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
            &lt;ul class=&#34;nav nav-tabs tabs-3&#34; role=&#34;tablist&#34;&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link active&#34; data-toggle=&#34;tab&#34; href=&#34;#turing2&#34; role=&#34;tab&#34;&gt;Turing&lt;/a&gt;&lt;/li&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link&#34; data-toggle=&#34;tab&#34; href=&#34;#python2&#34; role=&#34;tab&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link&#34; data-toggle=&#34;tab&#34; href=&#34;#java2&#34; role=&#34;tab&#34;&gt;Java&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;div class=&#34;tab-content&#34;&gt;
                &lt;div id=&#34;turing2&#34; class=&#34;tab-pane fade in active&#34;&gt;
                    &lt;pre class=&#34;language-turing line-numbers&#34;&gt;
                        &lt;code&gt;var value: int := 10
                        var numDivides: int := 0
                        loop
                            value = value / 2
                            numDivides := numDivides +1
                            exit when value &lt;1
                        end loop
                        put (numDivides)


                          &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
                &lt;div id=&#34;python2&#34; class=&#34;tab-pane fade&#34;&gt;
                    &lt;pre class=&#34;language-python line-numbers&#34;&gt;
                        &lt;code&gt;value = 10
                        numDivides = 0
                        while (true):
                            value = value / 2
                            numDivides ++
                            if (value &lt; 1): break
                        print numDivides

                        OR

                        value = 10
                        numDivides = 0
                        while (value &gt;= 1):
                            value = value / 2
                            numDivides ++
                        print numDivides

                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
                &lt;div id=&#34;java2&#34; class=&#34;tab-pane fade&#34;&gt;
                    &lt;pre class=&#34;language-java line-numbers&#34;&gt;
                        &lt;code&gt;int value = 10;
                        int numDivides = 0;
                        while (true){
                            value = value / 2;
                            numDivides ++;
                            if (value &lt;1)
                                break;
                        }
                        System.out.println(numDivides)
                        
                        OR

                        int value = 10;
                        int numDivides = 0;
                        while (value &gt;= 1){
                            value = value / 2;
                            numDivides ++;
                        }
                        System.out.println(numDivides)


                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Description&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
         &lt;h3&gt;Challenge Problem&lt;/h3&gt;
            &lt;p&gt;Use a conditional loop to output the first 10 numbers in the Fibonacci Sequence.  &lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Template</title>
      <link>http://macwebdev.ca/lesson/template/</link>
      <pubDate>Wed, 30 Nov 2016 21:30:33 -0500</pubDate>
      
      <guid>http://macwebdev.ca/lesson/template/</guid>
      <description>&lt;div id = &#34;Description&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
                &lt;i&gt;Lesson created by [author]&lt;/i&gt;
            &lt;p&gt;This is a sample file to show you how to create a proper lesson page. Here you would explain the topic, and teach them what they would need to know. Feel free to edit this section with subheadings, etc.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Code&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
            &lt;ul class=&#34;nav nav-tabs tabs-3&#34; role=&#34;tablist&#34;&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link active&#34; data-toggle=&#34;tab&#34; href=&#34;#turing&#34; role=&#34;tab&#34;&gt;Turing&lt;/a&gt;&lt;/li&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link&#34; data-toggle=&#34;tab&#34; href=&#34;#python&#34; role=&#34;tab&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link&#34; data-toggle=&#34;tab&#34; href=&#34;#java&#34; role=&#34;tab&#34;&gt;Java&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;div class=&#34;tab-content&#34;&gt;
                &lt;div id=&#34;turing&#34; class=&#34;tab-pane fade in active&#34;&gt;
                    &lt;pre class=&#34;language-turing line-numbers&#34;&gt;
                        &lt;code&gt;put(&#34;Hello World!&#34;)&lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
                &lt;div id=&#34;python&#34; class=&#34;tab-pane fade&#34;&gt;
                    &lt;pre class=&#34;language-python line-numbers&#34;&gt;
                        &lt;code&gt;print(&#39;Hello World!&#39;)&lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
                &lt;div id=&#34;java&#34; class=&#34;tab-pane fade&#34;&gt;
                    &lt;pre class=&#34;language-java line-numbers&#34;&gt;
                        &lt;code&gt;System.out.println(&#34;Hello World!&#34;);&lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Description&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
            &lt;p&gt;Here you can choose to continue on with the lesson or remove it completely.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Sample&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
            &lt;h2&gt; Sample Problems &lt;/h2&gt;
            &lt;p&gt; Here is where you show a sample problem, a very simple one. You will then explain how to solve it and redirect them to a more difficult (still simple) problem. &lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Time</title>
      <link>http://macwebdev.ca/lesson/time/</link>
      <pubDate>Wed, 30 Nov 2016 21:30:33 -0500</pubDate>
      
      <guid>http://macwebdev.ca/lesson/time/</guid>
      <description>&lt;div id = &#34;Description&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
            &lt;i&gt;Lesson created by Vincent Macri&lt;/i&gt;
            &lt;p&gt;The universe was created on January 1st, 1970.&lt;/p&gt;
            &lt;p&gt;This lesson will teach you how to keep track of time. The general idea is to get the difference between the current time, and when the timer started.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Code&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
            &lt;ul class=&#34;nav nav-tabs tabs-3&#34; role=&#34;tablist&#34;&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link active&#34; data-toggle=&#34;tab&#34; href=&#34;#turing&#34; role=&#34;tab&#34;&gt;Turing&lt;/a&gt;&lt;/li&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link&#34; data-toggle=&#34;tab&#34; href=&#34;#python&#34; role=&#34;tab&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link&#34; data-toggle=&#34;tab&#34; href=&#34;#java&#34; role=&#34;tab&#34;&gt;Java&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;

            &lt;div class=&#34;tab-content&#34;&gt;
                &lt;div id=&#34;turing&#34; class=&#34;tab-pane fade in active&#34;&gt;
                &lt;pre class=&#34;language-turing line-numbers&#34;&gt;
                    &lt;code&gt;
                        var startTime, endTime : int % Declare the two variables to keep track of time.
                        startTime := Time.Sec % Set startTime to the number of seconds since the start of the universe (1970).
                        % Do stuff
                        delay(5000) % Wait 5 seconds, for demonstration purposes.
                        endTime := Time.Sec % Set endTime to the number of seconds since the start of the universe (1970).
                        put(endTime - startTime) % Output the difference between startTime and endTime.

                        % Note: Turing rounds passed time somewhat unpredictably. It&#39;s accurate enough for most purposes, however.
                    &lt;/code&gt;
                &lt;/pre&gt;
                &lt;/div&gt;
                &lt;div id=&#34;python&#34; class=&#34;tab-pane fade&#34;&gt;
                    &lt;pre class=&#34;language-python line-numbers&#34;&gt;
                        &lt;code&gt;
                            import time # Import the time module, so we can use the time functions.
                            startTime = time.time() # Set startTime to the number of seconds since the start of the universe (1970).
                            time.sleep(5); # Wait 5 seconds, for demonstration purposes.
                            endTime = time.time() # Set endTime to the number of seconds since the start of the universe (1970).
                            print(endTime - startTime) # Output the difference between startTime and endTime.

                            # Note: In Python, time.time() returns the time since the start of the universe in seconds as a float. The precision can vary
                            # between machines however. It is not guaranteed to be more precise than 1 second.
                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
                &lt;div id=&#34;java&#34; class=&#34;tab-pane fade&#34;&gt;
                    &lt;pre class=&#34;language-java line-numbers&#34;&gt;
                        &lt;code&gt;
                            long startTime = System.currentTimeMillis(); // Set startTime to the number of milliseconds since the start of the universe (1970)

                            // Delays in Java are more verbose than in other languages.
                            try {
                                Thread.sleep(5000); // Wait for 5 seconds.
                            } catch(InterruptedException e) { // Catch an error that can (but almost never does) occur when using Thread.sleep().
                                e.printStackTrace(); // If there is an error (which there shouldn&#39;t be), print the error message.
                            }


                            endTime = System.currentTimeMillis(); // Set endTime to the number of milliseconds since the start of the universe (1970).
                            System.out.println(endTime - startTime); // Output the difference between startTime and endTime.

                            long timeNow = System.currentTimeMillis();
                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Sample&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
            &lt;h2&gt; Sample Problem &lt;/h2&gt;
            &lt;p&gt;Write a program that waits five seconds without using delay.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Variables</title>
      <link>http://macwebdev.ca/lesson/variables/</link>
      <pubDate>Wed, 30 Nov 2016 21:30:33 -0500</pubDate>
      
      <guid>http://macwebdev.ca/lesson/variables/</guid>
      <description>&lt;div id = &#34;Description&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
        &lt;i&gt;Lesson created by Vincent Macri&lt;/i&gt;
        &lt;p&gt;Variables allow you to store values. They are one of the most important parts of programming, maybe even the most important.&lt;/p&gt;
        &lt;p&gt;In this lesson, we will be focusing on the syntax of using variables.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Code&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
            &lt;ul class=&#34;nav nav-tabs tabs-3&#34; role=&#34;tablist&#34;&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link active&#34; data-toggle=&#34;tab&#34; href=&#34;#turing&#34; role=&#34;tab&#34;&gt;Turing&lt;/a&gt;&lt;/li&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link&#34; data-toggle=&#34;tab&#34; href=&#34;#python&#34; role=&#34;tab&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
                &lt;li class=&#34;nav-item&#34;&gt;&lt;a class=&#34;nav-link&#34; data-toggle=&#34;tab&#34; href=&#34;#java&#34; role=&#34;tab&#34;&gt;Java&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
        
            &lt;div class=&#34;tab-content&#34;&gt;
                &lt;div id=&#34;turing&#34; class=&#34;tab-pane fade in active&#34;&gt;
                    &lt;pre class=&#34;language-turing line-numbers&#34;&gt;
                        &lt;code&gt;
                            var firstName : string := &#34;Vincent&#34;
                            var lastName : string := &#34;Macri&#34;
                            var languages : int % In Turing, you can declare a variable, and give it a value later.
                            languages := 3

                            put (firstName + &#34; &#34; + lastName + &#34; made this lesson. It teaches variables in &#34; + intstr (languages) + &#34; languages!&#34;)
                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
                &lt;div id=&#34;python&#34; class=&#34;tab-pane fade&#34;&gt;
                    &lt;pre class=&#34;language-python line-numbers&#34;&gt;
                        &lt;code&gt;
                            firstName = &#39;Vincent&#39;
                            lastName = &#39;Macri&#39;
                            languages = 0 # Python doesn&#39;t let you declare variables without assigning them,
                            languages = 3 # But you can always just assign a new value when you are ready.

                            print (str.format(&#34;{} {} made this lesson. It teaches variables in {} languages!&#34;, firstName, lastName, languages))
                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
                &lt;div id=&#34;java&#34; class=&#34;tab-pane fade&#34;&gt;
                    &lt;pre class=&#34;language-java line-numbers&#34;&gt;
                        &lt;code&gt;
                            String firstName = &#34;Vincent&#34;;
                            String lastName = &#34;Macri&#34;;
                            int languages; // In Java, you can declare a variable, and give it a value later.
                            languages = 3;

                            System.out.println(firstName + &#34; &#34; + lastName + &#34; made this lesson. It teaches variables in &#34; + languages + &#34; languages!&#34;);
                        &lt;/code&gt;
                    &lt;/pre&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Description&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
            &lt;p&gt;You may have noticed that Turing and Java use double quotes (&#34; &#34;) for strings, while Python uses single quotes (&#39; &#39;). In Turing and Java, double quotes are used for strings, while single quotes are used for single characters. In Python, you can use either double or single quotes, but Python programmers tend to prefer single quotes.&lt;/p&gt;
            &lt;p&gt;For Turing and Java, we concatenated the variables with the string. Concatenate is a fancy word for put togther.&lt;/p&gt;
            &lt;p&gt;In Python, we used the str.format() command. It formats strings for us. We use {} in place of the variables, and then list the variables in order at the end.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div id = &#34;Sample&#34; class = &#34;container&#34;&gt;
    &lt;div class = &#34;row&#34;&gt;
        &lt;div class = &#34;col-md-12&#34;&gt;
            &lt;h2&gt; Sample Problems &lt;/h2&gt;
            &lt;p&gt;Write a program where the user can enter their first name, lastName, and age, and then output &#34;&lt;i&gt;firstName&lt;/i&gt; &lt;i&gt;lastName&lt;/i&gt; is &lt;i&gt;age&lt;/i&gt; years old.&#34;&lt;/p&gt;
            &lt;p&gt;Write a program where the user can enter two numbers, and then output the sum of the numbers.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://macwebdev.ca/lesson/Loops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://macwebdev.ca/lesson/Loops/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>